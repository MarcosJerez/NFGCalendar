<?php


/**
 * This class defines the structure of the 'sft_usuarios' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Mon Sep 24 21:13:16 2012
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    plugins.sftGuardPlugin.lib.model.map
 */
class SftUsuarioTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'plugins.sftGuardPlugin.lib.model.map.SftUsuarioTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('sft_usuarios');
		$this->setPhpName('SftUsuario');
		$this->setClassname('SftUsuario');
		$this->setPackage('plugins.sftGuardPlugin.lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addColumn('ID_SFUSER', 'IdSfuser', 'INTEGER', false, null, null);
		$this->addColumn('ALIAS', 'Alias', 'VARCHAR', false, 20, null);
		$this->addColumn('ACTIVO', 'Activo', 'BOOLEAN', true, null, true);
		$this->addColumn('FECHA_ALTA', 'FechaAlta', 'DATE', false, null, null);
		$this->addColumn('FECHA_BAJA', 'FechaBaja', 'DATE', false, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('ID_CULTURAPREF', 'IdCulturapref', 'CHAR', false, 5, null);
		$this->addForeignKey('ID_PERSONA', 'IdPersona', 'INTEGER', 'sft_personas', 'ID', false, null, null);
		$this->addForeignKey('ID_ORGANISMO', 'IdOrganismo', 'INTEGER', 'sft_organismos', 'ID', false, null, null);
		$this->addColumn('IDP', 'Idp', 'VARCHAR', false, 255, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('SftPersona', 'SftPersona', RelationMap::MANY_TO_ONE, array('id_persona' => 'id', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftOrganismo', 'SftOrganismo', RelationMap::MANY_TO_ONE, array('id_organismo' => 'id', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftAcceso', 'SftAcceso', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftConfPersonal', 'SftConfPersonal', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'CASCADE', 'CASCADE');
    $this->addRelation('SftControlAcceso', 'SftControlAcceso', RelationMap::ONE_TO_ONE, array('id' => 'id', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('SftDireccion', 'SftDireccion', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftEstadisticaAplicacion', 'SftEstadisticaAplicacion', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'CASCADE', 'CASCADE');
    $this->addRelation('SftEmail', 'SftEmail', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftTelefono', 'SftTelefono', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftUsuAtributoValor', 'SftUsuAtributoValor', RelationMap::ONE_TO_MANY, array('id' => 'id_usuario', ), 'RESTRICT', 'CASCADE');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // SftUsuarioTableMap
