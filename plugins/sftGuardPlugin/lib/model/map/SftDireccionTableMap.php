<?php


/**
 * This class defines the structure of the 'sft_direcciones' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Mon Sep 24 21:13:09 2012
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    plugins.sftGuardPlugin.lib.model.map
 */
class SftDireccionTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'plugins.sftGuardPlugin.lib.model.map.SftDireccionTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('sft_direcciones');
		$this->setPhpName('SftDireccion');
		$this->setClassname('SftDireccion');
		$this->setPackage('plugins.sftGuardPlugin.lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addForeignKey('ID_TIPODIRECCION', 'IdTipodireccion', 'INTEGER', 'sft_tiposdireccion', 'ID', true, null, null);
		$this->addColumn('TIPOVIA', 'Tipovia', 'VARCHAR', false, 12, null);
		$this->addColumn('DOMICILIO', 'Domicilio', 'VARCHAR', false, 80, null);
		$this->addColumn('NUMERO', 'Numero', 'VARCHAR', false, 15, null);
		$this->addColumn('ESCALERA', 'Escalera', 'VARCHAR', false, 15, null);
		$this->addColumn('PISO', 'Piso', 'VARCHAR', false, 15, null);
		$this->addColumn('LETRA', 'Letra', 'CHAR', false, 2, null);
		$this->addColumn('PAIS', 'Pais', 'VARCHAR', false, 50, null);
		$this->addColumn('PROVINCIA', 'Provincia', 'VARCHAR', false, 50, null);
		$this->addColumn('MUNICIPIO', 'Municipio', 'VARCHAR', false, 50, null);
		$this->addColumn('CP', 'Cp', 'VARCHAR', false, 20, null);
		$this->addForeignKey('ID_USUARIO', 'IdUsuario', 'INTEGER', 'sft_usuarios', 'ID', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('SftTipoDireccion', 'SftTipoDireccion', RelationMap::MANY_TO_ONE, array('id_tipodireccion' => 'id', ), 'RESTRICT', 'CASCADE');
    $this->addRelation('SftUsuario', 'SftUsuario', RelationMap::MANY_TO_ONE, array('id_usuario' => 'id', ), 'RESTRICT', 'CASCADE');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // SftDireccionTableMap
